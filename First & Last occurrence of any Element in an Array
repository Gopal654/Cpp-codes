// First & Last occurrence of any Element in an Array Through Binary search
#include <iostream>
using namespace std;
int first_occurrence (int size, int arr[],int item) {
    int start=0, end=size-1, ans;
    int mid=start+(end-start)/2;
    while(start<=end){
        if(item==arr[mid]){
            ans=mid;
            end=mid-1;
        }
        else if(item<arr[mid]){
            end=mid-1;
        }
        else if(item>arr[mid]){
            start=mid+1;
        }
        else
        return -1;
        mid=start+(end-start)/2;
    }
    return ans;
}
int last_occurrence (int size, int arr[],int item) {
    int start=0, end=size-1,ans;
    int mid=start+(end-start)/2;
    while(start<=end){
        if(item==arr[mid]){
            ans=mid;
            start=mid+1;
        }
        else if(item<arr[mid]){
            end=mid-1;
        }
        else if(item>arr[mid]){
            start=mid+1;
        }
        else
        return -1;
        mid=start+(end-start)/2;
    }
    return ans;
}

int main() {
    int n,arr[100], item;
    cout<<"Enter size of array: ";
    cin>>n;
    cout<<"Enter Array Element: ";
    for(int i=0;i<n;i++){
        cin>>arr[i];
    }
    cout<<"Enter the Element to be found: ";
    cin>>item;
    int result=first_occurrence (n, arr, item);
    cout<<"First occurrence -> "<<result<<endl;
    int result1=last_occurrence (n, arr, item);
    cout<<"Last occurrence -> "<<result1<<endl;

    return 0;
}
